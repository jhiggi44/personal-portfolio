{"ast":null,"code":"import _slicedToArray from \"/Users/jordanhiggins/Desktop/personal_projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jordanhiggins/Desktop/personal_projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jordanhiggins/Desktop/personal_projects/personal-portfolio/src/components/Projects.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin-bottom: 80px;\\n    padding-top: 120px;\\n    color: #020343;\\n    color: black;\\n    font-family: 'Roboto Mono', monospace;\\n    font-weight: bold;\\n    font-size: 60px;\\n    text-align: center;\\n    -webkit-box-shadow: 0 -15px 16px -6px black;\\n\\t-moz-box-shadow: 0 -15px 16px -6px black;\\n    box-shadow: 0 -15px 16px -6px black;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    // margin-top: -50px;\\n    padding-bottom: 120px;\\n    width: 100vw;\\n    height: auto;\\n    background-color: #f3db95;\\n    clip-path: polygon(83% 2%, 100% 0, 100% 100%, 19% 98%, 0 100%, 0 0);\\n    clip-path: polygon(100% 0, 100% 100%, 35% 98%, 0 100%, 0 0);\\n    position: relative;\\n    -webkit-box-shadow: 0 -15px 16px -6px black;\\n\\t-moz-box-shadow: 0 -15px 16px -6px black;\\n    box-shadow: 0 -15px 16px -6px black;\\n    z-index: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Project from './Project';\nimport Tele from './Tele';\nconst Container = styled.div(_templateObject());\nconst Title = styled.h2(_templateObject2());\n\nfunction Projects() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  if (list.length === 0) {\n    fetch('https://api.github.com/users/jhigfolio/repos').then(response => response.json()).then(repos => {\n      // console.log(repos[0]);\n      let promises = [];\n      repos.forEach((repo, i) => {\n        promises.push(new Promise((res, rej) => {\n          fetch(\"https://api.github.com/repos/jhigfolio/\".concat(repo.name, \"/contents/img.jpg\"), {\n            'User-Agent': 'jhigfolio'\n          }).then(response => response.json()).then(img => {\n            res({\n              pic: img.download_url,\n              title: repo.name,\n              summary: repo.description,\n              link: repo.html_url\n            });\n          });\n        }));\n      });\n      Promise.all(promises).then(vals => {\n        let temp = [];\n        vals.forEach(val => {\n          temp.push(val);\n        });\n        setList(temp);\n      });\n    });\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Projects\"), React.createElement(Tele, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, list.map((item, i) => React.createElement(Project, {\n    pic: item.pic,\n    title: item.title,\n    summary: item.summary,\n    link: item.link,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/jordanhiggins/Desktop/personal_projects/personal-portfolio/src/components/Projects.js"],"names":["React","useState","styled","Project","Tele","Container","div","Title","h2","Projects","list","setList","length","fetch","then","response","json","repos","promises","forEach","repo","i","push","Promise","res","rej","name","img","pic","download_url","title","summary","description","link","html_url","all","vals","temp","val","map","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAV,mBAAf;AAeA,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAV,oBAAX;;AAcA,SAASC,QAAT,GAAoB;AAAA,oBACQR,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACTS,IADS;AAAA,QACHC,OADG;;AAEhB,MAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACnBC,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI;AACX;AACA,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACvBH,QAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpCZ,UAAAA,KAAK,kDAA2CO,IAAI,CAACM,IAAhD,wBAA0E;AAC3E,0BAAc;AAD6D,WAA1E,CAAL,CAGCZ,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMa,GAAG,IAAI;AACTH,YAAAA,GAAG,CAAC;AACAI,cAAAA,GAAG,EAAED,GAAG,CAACE,YADT;AAEAC,cAAAA,KAAK,EAAEV,IAAI,CAACM,IAFZ;AAGAK,cAAAA,OAAO,EAAEX,IAAI,CAACY,WAHd;AAIAC,cAAAA,IAAI,EAAEb,IAAI,CAACc;AAJX,aAAD,CAAH;AAMH,WAXD;AAYH,SAba,CAAd;AAcH,OAfD;AAgBAX,MAAAA,OAAO,CAACY,GAAR,CAAYjB,QAAZ,EAAsBJ,IAAtB,CAA4BsB,IAAD,IAAU;AACjC,YAAIC,IAAI,GAAG,EAAX;AACAD,QAAAA,IAAI,CAACjB,OAAL,CAAcmB,GAAD,IAAS;AAClBD,UAAAA,IAAI,CAACf,IAAL,CAAUgB,GAAV;AACH,SAFD;AAGA3B,QAAAA,OAAO,CAAC0B,IAAD,CAAP;AACH,OAND;AAOH,KA5BD;AA6BH;;AAED,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3B,IAAI,CAAC6B,GAAL,CAAS,CAACC,IAAD,EAAOnB,CAAP,KACN,oBAAC,OAAD;AACI,IAAA,GAAG,EAAEmB,IAAI,CAACZ,GADd;AAEI,IAAA,KAAK,EAAEY,IAAI,CAACV,KAFhB;AAGI,IAAA,OAAO,EAAEU,IAAI,CAACT,OAHlB;AAII,IAAA,IAAI,EAAES,IAAI,CAACP,IAJf;AAKI,IAAA,GAAG,EAAEZ,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAFJ,CADJ;AAgBH;;AAED,eAAeZ,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Project from './Project';\nimport Tele from './Tele';\n\nconst Container = styled.div`\n    // margin-top: -50px;\n    padding-bottom: 120px;\n    width: 100vw;\n    height: auto;\n    background-color: #f3db95;\n    clip-path: polygon(83% 2%, 100% 0, 100% 100%, 19% 98%, 0 100%, 0 0);\n    clip-path: polygon(100% 0, 100% 100%, 35% 98%, 0 100%, 0 0);\n    position: relative;\n    -webkit-box-shadow: 0 -15px 16px -6px black;\n\t-moz-box-shadow: 0 -15px 16px -6px black;\n    box-shadow: 0 -15px 16px -6px black;\n    z-index: 1;\n`;\n\nconst Title = styled.h2`\n    margin-bottom: 80px;\n    padding-top: 120px;\n    color: #020343;\n    color: black;\n    font-family: 'Roboto Mono', monospace;\n    font-weight: bold;\n    font-size: 60px;\n    text-align: center;\n    -webkit-box-shadow: 0 -15px 16px -6px black;\n\t-moz-box-shadow: 0 -15px 16px -6px black;\n    box-shadow: 0 -15px 16px -6px black;\n`;\n\nfunction Projects() {\n    const [list, setList] = useState([]);\n    if (list.length === 0) {\n        fetch('https://api.github.com/users/jhigfolio/repos')\n        .then(response => response.json())\n        .then(repos => {\n            // console.log(repos[0]);\n            let promises = []\n            repos.forEach((repo, i) => {\n                promises.push(new Promise((res, rej) => {\n                    fetch(`https://api.github.com/repos/jhigfolio/${repo.name}/contents/img.jpg`,  {\n                        'User-Agent': 'jhigfolio'\n                    })\n                    .then(response => response.json())\n                    .then(img => {\n                        res({\n                            pic: img.download_url,\n                            title: repo.name,\n                            summary: repo.description,\n                            link: repo.html_url\n                        });\n                    });\n                })); \n            })\n            Promise.all(promises).then((vals) => {\n                let temp = [];\n                vals.forEach((val) => {\n                    temp.push(val);\n                });\n                setList(temp);\n            });\n        });\n    } \n\n    return (\n        <Container>\n            <Title>Projects</Title>\n            <Tele>\n                {list.map((item, i) => \n                    <Project \n                        pic={item.pic}\n                        title={item.title}\n                        summary={item.summary}\n                        link={item.link} \n                        key={i}\n                    />\n                )}\n            </Tele>\n        </Container>\n    )\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}